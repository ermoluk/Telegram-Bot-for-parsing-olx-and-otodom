import requests
import json
from telebot import TeleBot, types

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = TeleBot('6325579559:AAGPx2ReWeF5eQMOgd6i3DQ3S6aan64hsQs')

# –°–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ –ü–æ–ª—å—à–∏
cities = ['Warsaw', 'Krakow', 'Wroclaw', 'Poznan', 'Gdansk', 'Lodz', 'Katowice', 'Bialystok', 'Czestochowa']

# –°–ø–∏—Å–æ–∫ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–º–Ω–∞—Ç
rooms = ['1', '2', '3', '4', '5']

# –°–ª–æ–≤–∞—Ä—å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∏—Å–∫–∞
params = {}

# –Ø–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
default_lang = 'EN'

# –Ø–∑—ã–∫, –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
lang = default_lang

# –°–ø–∏—Å–æ–∫ —è–∑—ã–∫–æ–≤
languages = ['EN','RU','UK','PL']

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤
translations = {
    'EN': {
        'language_processing_': 'Search for housing üîé',
        'greeting': 'Hello! I am a bot that helps you find real estate in Poland.',
        'choose_city': 'üèôÔ∏è Choose a city in Poland:',
        'choose_rooms': 'üèò Choose the number of rooms:',
        'enter_min_price': '‚úèÔ∏è Enter the minimum price in PLN (e.g., 1000):',
        'enter_max_price': '‚úèÔ∏è Enter the maximum price in PLN (e.g., 2000):',
        'search_results': 'Found options using your search criteria:',
        'reset_search': 'Settings have been reset. Select "Search for housing üîé" to start a new search.',
        'search_settings': 'Search settings üîé',
        'start_new_search': 'Start a new search üîé',
    },
    'RU': {
        'language_processing_': '–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫ üîé',
        'greeting': '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –≤ –ø–æ–∏—Å–∫–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ –ü–æ–ª—å—à–µ.',
        'choose_city': 'üèôÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –≤ –ü–æ–ª—å—à–µ:',
        'choose_rooms': 'üèò –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç:',
        'enter_min_price': '‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –≤ –∑–ª–æ—Ç—ã—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1000):',
        'enter_max_price': '‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –≤ –∑–ª–æ—Ç—ã—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2000):',
        'search_results': '–ù–∞–π–¥–µ–Ω–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –∏—Å–ø–æ–ª—å–∑—É—è –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞:',
        'reset_search': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã. –í—ã–±–µ—Ä–∏—Ç–µ "–ü–æ–∏—Å–∫ –∂–∏–ª—å—è üîé" –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞.',
        'search_settings': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞ üîé',
        'start_new_search': '–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫ üîé',
    },
    'UK': {
        'language_processing_': '–ü–æ—à—É–∫ –∂–∏—Ç–ª–∞ üîé',
        'greeting': '–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç, —è–∫–∏–π –¥–æ–ø–æ–º–∞–≥–∞—î –∑–Ω–∞—Ö–æ–¥–∏—Ç–∏ –Ω–µ—Ä—É—Ö–æ–º—ñ—Å—Ç—å –≤ –ü–æ–ª—å—â—ñ.',
        'choose_city': 'üèôÔ∏è –í–∏–±–µ—Ä—ñ—Ç—å –º—ñ—Å—Ç–æ –≤ –ü–æ–ª—å—â—ñ:',
        'choose_rooms': 'üèò –í–∏–±–µ—Ä—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫—ñ–º–Ω–∞—Ç:',
        'enter_min_price': '‚úèÔ∏è –í–≤–µ–¥—ñ—Ç—å –º—ñ–Ω—ñ–º–∞–ª—å–Ω—É —Ü—ñ–Ω—É –≤ –∑–ª–æ—Ç–∏—Ö (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 1000):',
        'enter_max_price': '‚úèÔ∏è –í–≤–µ–¥—ñ—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É —Ü—ñ–Ω—É –≤ –∑–ª–æ—Ç–∏—Ö (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 2000):',
        'search_results': '–ó–Ω–∞–π–¥–µ–Ω–æ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –∑–∞ –≤–∞—à–∏–º–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—è–º–∏ –ø–æ—à—É–∫—É:',
        'reset_search': '–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∫–∏–Ω—É—Ç—ñ. –í–∏–±–µ—Ä—ñ—Ç—å "–ü–æ—à—É–∫ –∂–∏—Ç–ª–∞ üîé", —â–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏ –Ω–æ–≤–∏–π –ø–æ—à—É–∫.',
        'search_settings': '–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–æ—à—É–∫—É üîé',
        'start_new_search': '–†–æ–∑–ø–æ—á–∞—Ç–∏ –Ω–æ–≤–∏–π –ø–æ—à—É–∫ üîé',
    },
    'PL': {
        'language_processing_': 'Szukaj mieszkania üîé',
        'greeting': 'Cze≈õƒá! Jestem botem, kt√≥ry pomaga znale≈∫ƒá nieruchomo≈õƒá w Polsce.',
        'choose_city': 'Wybierz miasto w Polsce:',
        'choose_rooms': 'üèò Wybierz liczbƒô pokoi:',
        'enter_min_price': '‚úèÔ∏è Podaj minimalnƒÖ cenƒô w PLN (np. 1000):',
        'enter_max_price': '‚úèÔ∏è Podaj maksymalnƒÖ cenƒô w PLN (np. 2000):',
        'search_results': 'Znaleziono opcje spe≈ÇniajƒÖce Twoje kryteria wyszukiwania:',
        'reset_search': 'Ustawienia zosta≈Çy zresetowane. Wybierz "Szukaj mieszkania üîé", aby rozpoczƒÖƒá nowe wyszukiwanie.',
        'search_settings': 'Ustawienia wyszukiwania üîé',
        'start_new_search': 'Rozpocznij nowe wyszukiwanie üîé',
    },
}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã start
@bot.message_handler(commands=['start'])
def start(message):
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–Ω—é –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–∏—Å–∫–∞
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for language in languages:
        item = types.KeyboardButton(language)
        markup.add(item)
    bot.send_message(message.chat.id, 'Please select your language', reply_markup=markup)
    

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —è–∑—ã–∫–∞
@bot.message_handler(func=lambda message: message.text == "EN" or message.text == "RU" or message.text == "UK" or message.text =="PL")
def language_processing(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    global lang 
    lang = message.text
    item = types.KeyboardButton(translations[lang]['language_processing_'])
    markup.add(item)
    bot.send_message(message.chat.id, translations[lang]['greeting'], reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–∏—Å–∫ –∂–∏–ª—å—è"
@bot.message_handler(func=lambda message: message.text == translations[lang]['language_processing_'])
def search(message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ –∏ –ø—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–±—Ä–∞—Ç—å
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for city in cities:
        item = types.KeyboardButton(city)
        markup.add(item)
    bot.send_message(message.chat.id, translations[lang]['choose_city'], reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞
@bot.message_handler(func=lambda message: message.text in cities)
def choose_rooms(message):
    # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥
    params['city'] = message.text

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–º–Ω–∞—Ç –∏ –ø—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–±—Ä–∞—Ç—å
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for room in rooms:
        item = types.KeyboardButton(room)
        markup.add(item)
    bot.send_message(message.chat.id, translations[lang]['choose_rooms'], reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–º–Ω–∞—Ç
@bot.message_handler(func=lambda message: message.text in rooms)
def enter_min_price(message):
    # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç
    params['rooms'] = message.text

    # –ó–∞–ø—Ä–æ—Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã
    bot.send_message(message.chat.id, translations[lang]['enter_min_price'])

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã
@bot.message_handler(func=lambda message: message.text.isdigit())
def enter_max_price(message):
    # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É
    params['price_min'] = int(message.text)

    # –ó–∞–ø—Ä–æ—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã
    bot.send_message(message.chat.id, translations[lang]['enter_max_price'])

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã
@bot.message_handler(func=lambda message: message.text.isdigit())
def start_search(message):
    # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É
    params['price_max'] = int(message.text)

    # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫
    # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ params
    # –ó–∞–ø—Ä–æ—Å –∫ API –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –±–æ—Ç–æ–º

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    item = types.KeyboardButton(translations[lang]['search_settings'])
    markup.add(item)
    bot.send_message(message.chat.id, translations[lang]['search_results'], reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞"
@bot.message_handler(func=lambda message: message.text == translations[lang]['search_settings'])
def reset_search(message):
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞
    params.clear()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    item = types.KeyboardButton(translations[lang]['language_processing_'])
    markup.add(item)
    bot.send_message(message.chat.id, translations[lang]['reset_search'], reply_markup=markup)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()


